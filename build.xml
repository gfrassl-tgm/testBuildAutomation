<?xml version="1.0"?>
<project name="Rational" default="main" basedir=".">


	<!--Setting needed variables for the build.xml-->
	<property name="app-main-class" value="Rational" />
	<property name="pkg" value="rational" />
	<property name="src.dir" location="src" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="docs.dir" location="docs/${pkg}" />
	<property name="lib.dir" location="lib" />
	<property name="dist.lib.dir" location="dist/lib" />

	<!--by typing ant mkdir all needed directories are made-->
	<target name="mkdir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/${pkg}" />
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.dir}/${pkg}" />
		
		<!--copies the log4j2.xml file inte the build directory-->
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" includes="log4j2.xml"  excludes="**/*sources.jar, **/*javadoc.jar" />
		</copy>
	</target>

	<!--setting classpath for ant-->
	<target name="setpath" depends="mkdir">
		<path id="classpath">
			<fileset dir="${dist.dir}/${pkg}">
				<include name="**/*" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
				<exclude name="**/*sources.jar, **/*javadoc.jar"/>
			</fileset>
		</path>

		<pathconvert property="classpath.name" pathsep=" ">
			<path refid="classpath" />
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*.jar" to="lib/*.jar" />
				</chainedmapper>
			</mapper>
		</pathconvert>
	</target>
	
	<!--copies files into new directory-->
	<target name="copy" depends="setpath, mkdir">
		<mkdir dir="${dist.lib.dir}" />
		<copy todir="${dist.lib.dir}">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
				<exclude name="**/*sources.jar, **/*javadoc.jar" />
			</fileset>
		</copy>
		<copy todir="${dist.dir}" overwrite="false">
			<fileset dir="${src.dir}">
				<include name="*.xml" />
				<exclude name="test*.*" />
			</fileset>
		</copy>
	</target>

	
	<path id="compilepath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
			<exclude name="**/*sources.jar, **/*javadoc.jar" />
		</fileset>
	</path>

	<!--cleaning up ant created directories-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${docs.dir}" />
		<delete dir="${dist.lib.dir}" />
		<delete dir="${dist.dir}/${pkg}" />
	</target>
	
	<!--compiles the Rational class-->
	<target name="compile" depends="mkdir">
		<javac srcdir="${src.dir}" includeantruntime="true" destdir="${build.dir}" classpathref="compilepath"/>
	</target>


	<!--Creates Javadoc-->
	<target name="docs" depends="compile">
		<javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
			<fileset dir="${src.dir}">
				<include name="**" />
				<exclude name="test*.*" />
				<exclude name="*.xml" />
			</fileset>
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javadoc>
	</target>

	<!--creates a jar file-->
	<target name="jar" depends="setpath,compile, docs, copy" description="runnable Jar">
		<echo message="classpath.name : ${classpath.name} " />
		<jar destfile="${dist.dir}/${pkg}/${app-main-class}.jar" basedir="${build.dir}">
			<manifest>
				<attribute name="Main-Class" value="${pkg}.${app-main-class}" />
				<attribute name="Class-Path" value="${classpath.name}" />
			</manifest>
		</jar>
	</target>
	
	<!--runs the main method and it needs a .jar data-->
	<target name="run" depends="jar">
		<java fork="true" classname="${pkg}.${app-main-class}">
			<classpath>
				<path refid="classpath" />
				<path location="${dist.dir}/${pkg}/${app-main-class}.jar" />
			</classpath>
		</java>
	</target>
	
	<target name="main" depends="compile, jar, docs" description="ant run">
	</target>
	
	<!--runs junit test-->
	<target name="junit" depends="setpath">
		<junit printsummary="yes" fork="yes" haltonfailure="false">
			<classpath>
				<path refid="classpath"/>
			</classpath>
			<formatter type="plain" />
			<test name="rational.test.RationalTest"/>
		</junit>
	</target>
	
</project>